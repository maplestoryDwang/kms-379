package script.Boss;

import constants.QuestExConstants;
import database.DBConfig;
import objects.fields.fieldset.childs.*;
import objects.fields.gameobject.lifes.MapleLifeFactory;
import scripting.ScriptMessageFlag;
import scripting.newscripting.ScriptEngineNPC;

public class JinHillah extends ScriptEngineNPC {

    public void JinHillah_enter() {
        Maze3_dungeon();
    }

    // Maze3_dungeon
    public void Maze3_dungeon() {
        initNPC(MapleLifeFactory.getNPC(1402400));
        String Message = "진 힐라를 저지하기 위해 #b욕망의 제단#k으로 이동할까?\r\n\r\n";
        if (DBConfig.isGanglim) {
            Message += "#L0#욕망의 제단(#b하드 모드#k)으로 이동한다. #r(레벨 250이상) #g[" + getPlayer().getOneInfoQuestInteger(1234569, "jinhillah_clear") + "/" + (getPlayer().getBossTier() + 1) + "]#k#l\r\n";
            Message += "#L1#욕망의 제단(#b하드 연습 모드#k)으로 이동한다. #r(레벨 250이상)#k#l\r\n\r\n";
            //Message += "#L5#욕망의 제단(#r헬 모드#k)으로 이동한다. #r(레벨 250이상)#k#l\r\n";
            Message += "#L2#이동하지 않는다.#l";
        }
        else {
        	boolean single = getPlayer().getPartyMemberSize() == 1;
            Message += "#L3##b욕망의 제단(노말 모드)"+ (single ? "(싱글)" : "(멀티)") +"으로 이동한다.#r(레벨 250이상)#k#l\r\n";
            Message += "#L0##b욕망의 제단(하드 모드)"+ (single ? "(싱글)" : "(멀티)") +"으로 이동한다.#r(레벨 250이상)#k#l\r\n";
            //Message += "#L5##b욕망의 제단(#r헬 모드#b)으로 이동한다.#r(레벨 250이상)#k#l\r\n";
            Message += "#L4##b욕망의 제단(노말 연습 모드)"+ (single ? "(싱글)" : "(멀티)") +"으로 이동한다.#r(레벨 250이상)#k#l\r\n";
            Message += "#L1##b욕망의 제단(하드 연습 모드)"+ (single ? "(싱글)" : "(멀티)") +"으로 이동한다.#r(레벨 250이상)#k#l\r\n";
            int reset = getPlayer().getOneInfoQuestInteger(QuestExConstants.WeeklyQuestResetCount.getQuestID(), "JinHillah" + (single ? "Single" : "Multi"));
            Message += "#L8#입장 가능 횟수 증가 " + (single ? "(싱글)" : "(멀티)") + "(" + (1-reset) + "회 가능)#l\r\n\r\n\r\n";
            Message += "#L2#이동하지 않는다.#l";
        }
        int Menu = target.askMenu(Message, ScriptMessageFlag.BigScenario);
        if (Menu == 8 && !DBConfig.isGanglim) {
        	if (getPlayer().getTogetherPoint() < 150) {
        		self.sayOk("협동 포인트가 부족합니다. 보유 협동포인트 : " + getPlayer().getTogetherPoint(), ScriptMessageFlag.Scenario, ScriptMessageFlag.NpcReplacedByNpc);
        		return;
        	}
        	boolean single = getPlayer().getPartyMemberSize() == 1;
        	int reset = getPlayer().getOneInfoQuestInteger(QuestExConstants.WeeklyQuestResetCount.getQuestID(), "JinHillah"+ (single ? "Single" : "Multi"));
        	if (reset > 0) {
        		self.sayOk("이번 주에는 이미 입장가능 횟수를 증가시켰습니다.", ScriptMessageFlag.Scenario, ScriptMessageFlag.NpcReplacedByNpc);
        		return;
        	}
        	getPlayer().gainTogetherPoint(-150);
        	getPlayer().updateOneInfo(QuestExConstants.WeeklyQuestResetCount.getQuestID(), "JinHillah" + (single ? "Single" : "Multi"), String.valueOf(reset + 1));
        	self.sayOk("입장가능 횟수가 증가되었습니다.", ScriptMessageFlag.Scenario, ScriptMessageFlag.NpcReplacedByNpc);
        	return;
        }
        if (Menu == 2) return; //이동하지 않는다
        if (target.getParty() == null) {
            self.sayOk("1인 이상 파티를 맺어야만 입장할 수 있습니다.", ScriptMessageFlag.NpcReplacedByNpc);
            return;
        }
        if (target.getParty().getLeader().getId() != target.getId()) {
            self.sayOk("파티장을 통해 진행해 주십시오.", ScriptMessageFlag.NpcReplacedByNpc);
            return;
        }
        if (!target.getParty().isPartySameMap()) {
            self.sayOk("파티원이 모두 같은맵에 있어야 합니다.", ScriptMessageFlag.NpcReplacedByNpc);
            return;
        }
        switch (Menu) { //따로 제한되는거 없으면 바로 입장가능함
            case 0: { //하드모드
                boolean GenesisQuest = false;
                if (getPlayer().getQuestStatus(2000026) == 1) {
                    int Genesis = target.askMenu("#e<제네시스 무기>#n\r\n검은 마법사의 힘이 담긴 #b제네시스 무기#k의 비밀을 풀기 위한 임무를 수행 할 수 있다. 어떻게 할까?\r\n\r\n#e#r<임무 수행 조건>#n#b- 전원 '붉은 마녀 진 힐라이ㅢ 흔적'을 진행 중이고 진 힐라 격파 조건을 완료하지 않은 2인 이하의 파티로 격파\r\n- 2인 파티 시 최종 데미지 50% 감소, 1명이라도 실패할 경우 모든 파티원 함께 실패, 데스카운트가 남아 있는 파티원이 사망 중인 상태에서는 윌의 HP 1미만으로 감소 불가#n\r\n#k#L0#미션을 수행한다.#l\r\n#L1#미션을 수행하지 않는다.#l");
                    if (Genesis == 0) { //미션을 수행한다.
                        GenesisQuest = true;
                    } else if (Genesis == 1) { //미션을 수행하지 않는다.
                        GenesisQuest = false;
                    }
                }
                HardJinHillahEnter fieldSet = (HardJinHillahEnter) fieldSet("HardJinHillahEnter");
                int enter = fieldSet.enter(target.getId(), false, GenesisQuest, 6);
                if (enter == 6) {
                    self.sayOk("이용 가능한 인스턴스가 없습니다. 다른 채널을 이용해주세요.", ScriptMessageFlag.NpcReplacedByNpc);
                    return;
                }
                if (enter == -5) {
                    self.sayOk("보스 티어가 부족한 파티원이 있어 입장할 수 없습니다.", ScriptMessageFlag.Scenario, ScriptMessageFlag.NpcReplacedByNpc);
                    return;
                }
                if (enter == -10) {
                    target.sayOk("해당 미션은 두명 이하로 도전 할 수 있습니다.");
                    return;
                }
                if (enter == -20) {
                    target.sayOk("제네시스 퀘스트를 진행중인 구성으로만 진행할 수 있습니다.");
                    return;
                }
                if (enter == -3) {
                    self.sayOk("최근 일주일 이내 진힐라를 쓰러뜨린 파티원이 있습니다. 진힐라는 일주일에 1회만 클리어 가능합니다\r\n#r<클리어 기록은 매주 목요일에 일괄 초기화됩니다.>", ScriptMessageFlag.NpcReplacedByNpc);
                    return;
                }
                if ((enter == -1 || enter == 4)) {
                    self.sayOk("입장 제한횟수가 부족하거나 레벨 제한이 맞지 않는 파티원이 있어 입장할 수 없습니다.", ScriptMessageFlag.NpcReplacedByNpc);
                    return;
                }
                if (enter == -2) {
                    self.sayOk("입장 제한시간이 남은 파티원이 있어 입장할 수 없습니다.", ScriptMessageFlag.NpcReplacedByNpc);
                    return;
                }
                break;
            }
            case 1: { //하드 연습 모드
                int practiceMode = self.askYesNo("연습 모드에 입장을 선택하였습니다. 연습 모드에서는 #b#e경험치와 보상을 얻을 수 없으며#n#k 보스 몬스터의 종류와 상관없이 #b#e하루 20회#n#k만 이용할 수 있습니다. 입장하시겠습니까?");
                if (practiceMode == 0) {
                    return;
                }
                HardJinHillahEnter fieldSet = (HardJinHillahEnter) fieldSet("HardJinHillahEnter");
                int enter = fieldSet.enter(target.getId(), true, false, 6);
                if (enter == 6) {
                    self.sayOk("이용 가능한 인스턴스가 없습니다. 다른 채널을 이용해주세요.", ScriptMessageFlag.NpcReplacedByNpc);
                    return;
                }
                if (enter == -5) {
                    self.sayOk("보스 티어가 부족한 파티원이 있어 입장할 수 없습니다.", ScriptMessageFlag.Scenario, ScriptMessageFlag.NpcReplacedByNpc);
                    return;
                }
                if ((enter == 4)) {
                    self.sayOk("레벨 제한이 맞지 않는 파티원이 있어 입장할 수 없습니다.", ScriptMessageFlag.NpcReplacedByNpc);
                    return;
                }
                if (enter == -1) {
                    self.sayOk("연습 모드는 하루 20회만 가능합니다.", ScriptMessageFlag.NpcReplacedByNpc);
                    return;
                }
                break;
            }

            case 3: { //노말모드
                NormalJinHillahEnter fieldSet = (NormalJinHillahEnter) fieldSet("NormalJinHillahEnter");
                int enter = fieldSet.enter(target.getId(), false, 6);
                if (enter == 6) {
                    self.sayOk("이용 가능한 인스턴스가 없습니다. 다른 채널을 이용해주세요.", ScriptMessageFlag.NpcReplacedByNpc);
                    return;
                }
                if (enter == -5) {
                    self.sayOk("보스 티어가 부족한 파티원이 있어 입장할 수 없습니다.", ScriptMessageFlag.Scenario, ScriptMessageFlag.NpcReplacedByNpc);
                    return;
                }
                if (enter == -3) {
                    self.sayOk("최근 일주일 이내 진힐라를 쓰러뜨린 파티원이 있습니다. 진힐라는 일주일에 1회만 클리어 가능합니다\r\n#r<클리어 기록은 매주 목요일에 일괄 초기화됩니다.>", ScriptMessageFlag.NpcReplacedByNpc);
                    return;
                }
                if ((enter == -1 || enter == 4)) {
                    self.sayOk("입장 제한횟수가 부족하거나 레벨 제한이 맞지 않는 파티원이 있어 입장할 수 없습니다.", ScriptMessageFlag.NpcReplacedByNpc);
                    return;
                }
                if (enter == -2) {
                    self.sayOk("입장 제한시간이 남은 파티원이 있어 입장할 수 없습니다.", ScriptMessageFlag.NpcReplacedByNpc);
                    return;
                }
                break;
            }
            case 4: { //노말 연습 모드
                int practiceMode = self.askYesNo("연습 모드에 입장을 선택하였습니다. 연습 모드에서는 #b#e경험치와 보상을 얻을 수 없으며#n#k 보스 몬스터의 종류와 상관없이 #b#e하루 20회#n#k만 이용할 수 있습니다. 입장하시겠습니까?");
                if (practiceMode == 0) {
                    return;
                }
                NormalJinHillahEnter fieldSet = (NormalJinHillahEnter) fieldSet("NormalJinHillahEnter");
                int enter = fieldSet.enter(target.getId(), true, 6);
                if (enter == 6) {
                    self.sayOk("이용 가능한 인스턴스가 없습니다. 다른 채널을 이용해주세요.", ScriptMessageFlag.NpcReplacedByNpc);
                    return;
                }
                if (enter == -5) {
                    self.sayOk("보스 티어가 부족한 파티원이 있어 입장할 수 없습니다.", ScriptMessageFlag.Scenario, ScriptMessageFlag.NpcReplacedByNpc);
                    return;
                }
                if ((enter == 4)) {
                    self.sayOk("레벨 제한이 맞지 않는 파티원이 있어 입장할 수 없습니다.", ScriptMessageFlag.NpcReplacedByNpc);
                    return;
                }
                if (enter == -1) {
                    self.sayOk("연습 모드는 하루 20회만 가능합니다.", ScriptMessageFlag.NpcReplacedByNpc);
                    return;
                }
            }
            break;
            case 5: { //헬모드
                HellJinHillahEnter fieldSet = (HellJinHillahEnter) fieldSet("HellJinHillahEnter");
                int enter = fieldSet.enter(target.getId(), 6);
                if (enter == 6) {
                    self.sayOk("이용 가능한 인스턴스가 없습니다. 다른 채널을 이용해주세요.", ScriptMessageFlag.NpcReplacedByNpc);
                    return;
                }
                if (enter == -5) {
                    self.sayOk("보스 티어가 부족한 파티원이 있어 입장할 수 없습니다.", ScriptMessageFlag.Scenario, ScriptMessageFlag.NpcReplacedByNpc);
                    return;
                }
                if (enter == -3) {
                    self.sayOk("최근 일주일 이내 진힐라를 쓰러뜨린 파티원이 있습니다. 진힐라는 일주일에 1회만 클리어 가능합니다\r\n#r<클리어 기록은 매주 목요일에 일괄 초기화됩니다.>", ScriptMessageFlag.NpcReplacedByNpc);
                    return;
                }
                if ((enter == -1 || enter == 4)) {
                    self.sayOk("입장 제한횟수가 부족하거나 레벨 제한이 맞지 않는 파티원이 있어 입장할 수 없습니다.", ScriptMessageFlag.NpcReplacedByNpc);
                    return;
                }
                if (enter == -2) {
                    self.sayOk("입장 제한시간이 남은 파티원이 있어 입장할 수 없습니다.", ScriptMessageFlag.NpcReplacedByNpc);
                    return;
                }
                break;
            }
        }
    }

    public void jinHillah_out() {
        if (self.askYesNo("전투를 중지하고 나가시겠습니까?") == 1) {
            getPlayer().setRegisterTransferFieldTime(0);
            getPlayer().setRegisterTransferField(0);
            registerTransferField(getPlayer().getMap().getReturnMap().getId());
            if (getPlayer().getEventInstance() != null) {
                getPlayer().getEventInstance().unregisterPlayer(getPlayer());
                getPlayer().setEventInstance(null);
            }
            if (getPlayer().getBossMode() == 1) {
                getPlayer().setBossMode(0);
            }
        }
    }
}
