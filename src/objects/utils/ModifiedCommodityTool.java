package objects.utils;

import database.DBConfig;
import java.io.File;
import java.util.LinkedList;
import java.util.List;
import objects.wz.provider.MapleData;
import objects.wz.provider.MapleDataProvider;
import objects.wz.provider.MapleDataProviderFactory;
import objects.wz.provider.MapleDataTool;

public class ModifiedCommodityTool {
   static int[] extremeList = new int[]{
      1109000,
      1009017,
      1009018,
      1009019,
      1009020,
      1009021,
      1009022,
      1009023,
      1009024,
      1009025,
      1009026,
      1009027,
      1009028,
      1009029,
      1009030,
      1009031,
      1009032,
      1009033,
      1009034,
      1009035,
      1009036,
      1009037,
      1009038,
      1009039,
      1009040,
      1009041,
      1009042,
      1009043,
      1009044,
      1009045,
      1009046,
      1009047,
      1009048,
      1009049,
      1009050,
      1009051,
      1009052,
      1009053,
      1009054,
      1009055,
      1009056,
      1009057,
      1009058,
      1009059,
      1009060,
      1009061,
      1009062,
      1009063,
      1009064,
      1009065,
      1009066,
      1009067,
      1009068,
      1009069,
      1009070,
      1009071,
      1009072,
      1009073,
      1009074,
      1009078,
      1009079,
      1009080,
      1009081,
      1009082,
      1709000,
      1709001,
      1709002,
      1709003,
      1709004,
      1709005,
      1709006,
      1709007,
      1709008,
      1709009,
      1709010,
      1709011,
      1709012,
      1709013,
      1709014,
      1709015,
      1709016,
      1709017,
      1709018,
      1079000,
      1079001,
      1079002,
      1079003,
      1079004,
      1079005,
      1059000,
      1059001,
      1059002,
      1059003,
      1059004,
      1059005,
      1059006,
      1059007,
      1059008,
      1059009,
      1059010,
      1059011,
      1059012,
      1059013,
      1059014,
      1059015,
      1059016,
      1059017,
      1059018,
      1059019,
      1059020,
      1059021,
      1059022,
      1059023,
      1059024,
      1059027,
      1059028,
      1059029,
      1059030,
      1059031,
      1059032,
      1059033,
      1059034,
      1059035,
      1059036,
      1059037,
      1059038,
      1059039,
      1059040,
      1059041,
      1059042,
      1059043,
      1059044,
      1059045,
      1059046,
      1059047,
      1059048,
      1059049,
      1009000,
      1009001,
      1009002,
      1009003,
      1009004,
      1009005,
      1009006,
      1009007,
      1009008,
      1009009,
      1009010,
      1009011,
      1009012,
      1009013,
      1009014,
      1009015,
      1009016
   };
   static int[][] jinList = new int[][]{
      {
            1007000,
            1007001,
            1007002,
            1007003,
            1007004,
            1007005,
            1007006,
            1007007,
            1007008,
            1007009,
            1007010,
            1007011,
            1007012,
            1007013,
            1007014,
            1007015,
            1007016,
            1007017,
            1007018,
            1007019,
            1007020,
            1007021,
            1007022,
            1007023,
            1007024,
            1007025,
            1007026,
            1007027,
            1007028,
            1007029,
            1007030,
            1007031,
            1007032,
            1007033,
            1007034,
            1007035,
            1007036,
            1007037,
            1007038,
            1007039,
            1007040,
            1007041,
            1007042,
            1007043,
            1007044,
            1007045,
            1007046,
            1007047,
            1007048,
            1007049,
            1007050,
            1007051,
            1007052,
            1007053,
            1007054,
            1007055,
            1007056,
            1007057,
            1007058,
            1007059,
            1007060,
            1007061,
            1007062,
            1007063,
            1007064,
            1007065,
            1007066,
            1007067,
            1007068,
            1007069,
            1007070,
            1007071,
            1007072,
            1007073,
            1007074,
            1007075,
            1007076,
            1007077,
            1007078,
            1007079,
            1007080,
            1007081,
            1007082,
            1007083,
            1007084,
            1007085,
            1007086,
            1007087,
            1007088,
            1007089,
            1007090,
            1007091,
            1007092,
            1007093,
            1007094,
            1007095,
            1007096,
            1007097,
            1007098,
            1007099,
            1007100,
            1007101,
            1007102,
            1007103,
            1007104,
            1007105,
            1007106,
            1007107,
            1007108,
            1007109,
            1007110,
            1007111,
            1007112,
            1007113,
            1007114,
            1007115,
            1007116,
            1007117,
            1007118,
            1007119,
            1007120,
            1007121,
            1007122,
            1007123,
            1007124,
            1007125,
            1007126,
            1007127,
            1007128,
            1007129,
            1007130,
            1007131,
            1007132,
            1007133,
            1007134,
            1007135,
            1007136,
            1007137,
            1007138,
            1007139,
            1007140,
            1007141,
            1007142,
            1007143,
            1007144,
            1007145,
            1007146,
            1007147,
            1007148,
            1007149,
            1007150,
            1007151,
            1007152,
            1007153,
            1007154,
            1007155,
            1007156,
            1007157,
            1007158,
            1007159,
            1007160,
            1007161,
            1007162,
            1007163,
            1007164,
            1007165,
            1007166,
            1007167,
            1007168,
            1007169,
            1007170,
            1007171,
            1007172,
            1007173,
            1007174,
            1007175,
            1007176,
            1007177,
            1007178,
            1007179,
            1007180,
            1007181,
            1007182,
            1007183,
            1007184,
            1007185,
            1007186,
            1007187,
            1007188,
            1007189,
            1007190,
            1007191,
            1007192,
            1007193,
            1007194,
            1007195,
            1007196,
            1007197,
            1007198,
            1007199,
            1007200,
            1007201,
            1007202,
            1007203,
            1007204,
            1007205,
            1007206,
            1007207,
            1007208,
            1007209,
            1007210,
            1007211,
            1007212,
            1007213,
            1007214,
            1007215,
            1007216,
            1007217,
            1007218,
            1007219,
            1007220,
            1007221,
            1007222,
            1007223,
            1007224,
            1007225,
            1007226,
            1007227,
            1007228,
            1007229
      },
      {
            1056000,
            1056001,
            1056002,
            1056003,
            1056004,
            1056005,
            1056006,
            1056007,
            1056008,
            1056009,
            1056010,
            1056011,
            1056012,
            1056013,
            1056014,
            1056015,
            1056016,
            1056017,
            1056018,
            1056019,
            1056020,
            1056021,
            1056022,
            1056023,
            1056024,
            1056025,
            1056026,
            1056027,
            1056028,
            1056029,
            1056030,
            1056031,
            1056032,
            1056033,
            1056034,
            1056035,
            1056036,
            1056037,
            1056038,
            1056039,
            1056040,
            1056041,
            1056042,
            1056043,
            1056044,
            1056045,
            1056046,
            1056047,
            1056048,
            1056049,
            1056050,
            1056051,
            1056052,
            1056053,
            1056054,
            1056055,
            1056056,
            1056057,
            1056058,
            1056059,
            1056060,
            1056061,
            1056062,
            1056063,
            1056064,
            1056065,
            1056066,
            1056067,
            1056068,
            1056069,
            1056070,
            1056071,
            1056072,
            1056073,
            1056074,
            1056075,
            1056076,
            1056077,
            1056078,
            1056079,
            1056080,
            1056081,
            1056082,
            1056083,
            1056084,
            1057000,
            1057001,
            1057002,
            1057003,
            1057004,
            1057005,
            1057006,
            1057007,
            1057008,
            1057009,
            1057010,
            1057011,
            1057012,
            1057013,
            1057014,
            1057015,
            1057016,
            1057017,
            1057018,
            1057019,
            1058000,
            1058001,
            1058002,
            1058003,
            1058004,
            1058005,
            1058006,
            1058007,
            1058008,
            1058009,
            1058010,
            1058011,
            1058012,
            1058013,
            1058014,
            1058015,
            1058016,
            1058017,
            1058018,
            1058019,
            1058020,
            1058021,
            1058022,
            1058023,
            1058024,
            1058025,
            1058026,
            1058027,
            1058028,
            1058029,
            1058030,
            1058031,
            1058032,
            1058033,
            1058034,
            1058035,
            1058036,
            1058037,
            1058038,
            1058039,
            1058040,
            1058041,
            1058042,
            1058043,
            1058044,
            1058045,
            1058046,
            1058047,
            1058048,
            1058049,
            1058050,
            1058051,
            1058052,
            1058053,
            1058054,
            1058055,
            1058056,
            1058057,
            1058058,
            1058059,
            1058060,
            1058061,
            1058062,
            1058063,
            1058064,
            1058065,
            1058066,
            1058067,
            1058068,
            1058069,
            1058070,
            1058071,
            1058072,
            1058073,
            1058074,
            1058075,
            1058076,
            1058077,
            1058078,
            1058079,
            1058080,
            1058081,
            1058082,
            1058083,
            1058084
      },
      {1045000, 1045001, 1045002, 1045003, 1045004},
      {
            1704000,
            1704001,
            1704002,
            1704003,
            1704004,
            1704005,
            1704006,
            1704007,
            1704008,
            1704009,
            1704010,
            1704011,
            1704012,
            1704013,
            1704014,
            1705000,
            1705001,
            1705002,
            1705003,
            1705004,
            1705005,
            1705006,
            1705007,
            1705008,
            1705009,
            1705010,
            1705011,
            1705012,
            1705013,
            1705014,
            1705015,
            1705016,
            1705017,
            1705018,
            1705019,
            1705020,
            1705021,
            1705022,
            1705023,
            1705024,
            1705025,
            1705026,
            1705027,
            1705028,
            1705029,
            1705030,
            1705031,
            1705032,
            1705033,
            1705034,
            1705035,
            1705036,
            1705037,
            1705038,
            1705039,
            1705040,
            1705041,
            1705042,
            1705043,
            1705044,
            1705045,
            1705046,
            1705047,
            1705048,
            1705049,
            1705050,
            1705051,
            1705052,
            1705053,
            1705054,
            1705055,
            1705056,
            1705057,
            1705058,
            1705059,
            1705060,
            1705061,
            1705062,
            1705063,
            1705064,
            1705065,
            1705066,
            1705067,
            1705068,
            1705069,
            1705070,
            1705071,
            1705072,
            1705073,
            1705074,
            1705075,
            1705076,
            1705077,
            1705078,
            1705079,
            1705080,
            1705081,
            1705082,
            1705083,
            1705084,
            1705085,
            1705086,
            1705087,
            1705088,
            1705089
      },
      {
            1104000,
            1104001,
            1104002,
            1104003,
            1104004,
            1104005,
            1104006,
            1104007,
            1104008,
            1104009,
            1104010,
            1104011,
            1104012,
            1104013,
            1104014,
            1104015,
            1104016,
            1104017,
            1104018,
            1104019,
            1104020,
            1104021,
            1104022,
            1104023,
            1104024,
            1104035,
            1104036,
            1104037,
            1104038,
            1104039
      },
      {1084000, 1084001, 1084002, 1084003, 1084004, 1084005, 1084006, 1084007, 1084008},
      {1075000, 1075001, 1075002, 1075003, 1075004, 1075005, 1075006, 1075007, 1075008, 1075009, 1075010, 1075011, 1075012, 1075013, 1075014},
      {1012850, 1012851, 1012852, 1012853, 1012854, 1012855, 1012856, 1012857, 1012858, 1012859, 1012860, 1012861, 1012862, 1012863, 1012864},
      {1112917, 1032999, 1132399, 1114401, 1672077, 1032998, 1112921, 1114402, 1032219, 1022286}
   };
   static int[][] royalList = new int[][]{
      {
            1007000,
            1007001,
            1007002,
            1007003,
            1007004,
            1007005,
            1007006,
            1007007,
            1007008,
            1007009,
            1007010,
            1007011,
            1007012,
            1007013,
            1007014,
            1007015,
            1007016,
            1007017,
            1007018,
            1007019,
            1007020,
            1007021,
            1007022,
            1007023,
            1007024,
            1007025,
            1007026,
            1007027,
            1007028,
            1007029,
            1007030,
            1007031,
            1007032,
            1007033,
            1007034,
            1007035,
            1007036,
            1007037,
            1007038,
            1007039,
            1007040,
            1007041,
            1007042,
            1007043,
            1007044,
            1007045,
            1007046,
            1007047,
            1007048,
            1007049,
            1007050,
            1007051,
            1007052,
            1007053,
            1007054,
            1007055,
            1007056,
            1007057,
            1007058,
            1007059,
            1007060,
            1007061,
            1007062,
            1007063,
            1007064,
            1007065,
            1007066,
            1007067,
            1007068,
            1007069,
            1007070,
            1007071,
            1007072,
            1007073,
            1007074,
            1007075,
            1007076,
            1007077,
            1007078,
            1007079,
            1007080,
            1007081,
            1007082,
            1007083,
            1007084,
            1007085,
            1007086,
            1007087,
            1007088,
            1007089,
            1007090,
            1007091,
            1007092,
            1007093,
            1007094,
            1007095,
            1007096,
            1007097,
            1007098,
            1007099,
            1007100,
            1007101,
            1007102,
            1007103,
            1007104,
            1007105,
            1007106,
            1007107,
            1007108,
            1007109,
            1007110,
            1007111,
            1007112,
            1007113,
            1007114,
            1007115,
            1007116,
            1007117,
            1007118,
            1007119,
            1007120,
            1007121,
            1007122,
            1007123,
            1007124,
            1007125,
            1007126,
            1007127,
            1007128,
            1007129,
            1007130,
            1007131,
            1007132,
            1007133,
            1007134,
            1007135,
            1007136,
            1007137,
            1007138,
            1007139,
            1007140,
            1007141,
            1007142,
            1007143,
            1007144,
            1007145,
            1007146,
            1007147,
            1007148,
            1007149,
            1007150,
            1007151,
            1007152,
            1007153,
            1007154,
            1007155,
            1007156,
            1007157,
            1007158,
            1007159,
            1007160,
            1007161,
            1007162,
            1007163,
            1007164,
            1007165,
            1007166,
            1007167,
            1007168,
            1007169,
            1007170,
            1007171,
            1007172,
            1007173,
            1007174,
            1007175,
            1007176,
            1007177,
            1007178,
            1007179,
            1007180,
            1007181,
            1007182,
            1007183,
            1007184,
            1007185,
            1007186,
            1007187,
            1007188,
            1007189,
            1007190,
            1007191,
            1007192,
            1007193,
            1007194,
            1007195,
            1007196,
            1007197,
            1007198,
            1007199,
            1007200,
            1007201,
            1007202,
            1007203,
            1007204,
            1007205,
            1007206,
            1007207,
            1007208,
            1007209,
            1007210,
            1007211,
            1007212,
            1007213,
            1007214,
            1007215,
            1007216
      },
      {
            1056000,
            1056001,
            1056002,
            1056003,
            1056004,
            1056005,
            1056006,
            1056007,
            1056008,
            1056009,
            1056010,
            1056011,
            1056012,
            1056013,
            1056014,
            1056015,
            1056016,
            1056017,
            1056018,
            1056019,
            1056020,
            1056021,
            1056022,
            1056023,
            1056024,
            1056025,
            1056026,
            1056027,
            1056028,
            1056029,
            1056030,
            1056031,
            1056032,
            1056033,
            1056034,
            1056035,
            1056036,
            1056037,
            1056038,
            1056039,
            1056040,
            1056041,
            1056042,
            1056043,
            1056044,
            1056045,
            1056046,
            1056047,
            1056048,
            1056049,
            1056050,
            1056051,
            1056052,
            1056053,
            1056054,
            1056055,
            1056056,
            1056057,
            1056058,
            1056059,
            1056060,
            1056061,
            1056062,
            1056063,
            1056064,
            1056065,
            1056066,
            1056067,
            1056068,
            1056069,
            1056070,
            1056071,
            1056072,
            1056073,
            1056074,
            1056075,
            1056076,
            1056077,
            1056078,
            1056079,
            1056080,
            1056081,
            1056082,
            1056083,
            1056084,
            1056085,
            1056086,
            1056087,
            1056088,
            1056089,
            1056090,
            1056091,
            1056092,
            1056093,
            1056094,
            1056095,
            1056096,
            1056097,
            1057000,
            1057001,
            1057002,
            1057003,
            1057004,
            1057005,
            1057006,
            1057007,
            1057008,
            1057009,
            1057010,
            1057011,
            1057012,
            1057013,
            1057014,
            1057015,
            1057016,
            1057017,
            1057018,
            1057019,
            1057020,
            1058000,
            1058001,
            1058002,
            1058003,
            1058004,
            1058005,
            1058006,
            1058007,
            1058008,
            1058009,
            1058010,
            1058011,
            1058012,
            1058013,
            1058014,
            1058015,
            1058016,
            1058017,
            1058018,
            1058019,
            1058020,
            1058021,
            1058022,
            1058023,
            1058024,
            1058025,
            1058026,
            1058027,
            1058028,
            1058029,
            1058030,
            1058031,
            1058032,
            1058033,
            1058034,
            1058035,
            1058036,
            1058037,
            1058038,
            1058039,
            1058040,
            1058041,
            1058042,
            1058043,
            1058044,
            1058045,
            1058046,
            1058047,
            1058048,
            1058049,
            1058050,
            1058051,
            1058052,
            1058053,
            1058054,
            1058055,
            1058056,
            1058057,
            1058058,
            1058059,
            1058060,
            1058061,
            1058062,
            1058063,
            1058064,
            1058065,
            1058066,
            1058067,
            1058068,
            1058069,
            1058070,
            1058071,
            1058072,
            1058073,
            1058074,
            1058075,
            1058076,
            1058077,
            1058078,
            1058079,
            1058080,
            1058081,
            1058082,
            1058083,
            1058084,
            1058085,
            1058086,
            1058087,
            1058088,
            1058089,
            1058090,
            1058091,
            1058092,
            1058093,
            1058094,
            1058095,
            1058096,
            1058097
      },
      new int[0],
      {
            1705000,
            1705001,
            1705002,
            1705003,
            1705004,
            1705005,
            1705006,
            1705007,
            1705008,
            1705009,
            1705010,
            1705011,
            1705012,
            1705013,
            1705014,
            1705015,
            1705016,
            1705017,
            1705018,
            1705019,
            1705020,
            1705021,
            1705022,
            1705023,
            1705024,
            1705025,
            1705026,
            1705027,
            1705028,
            1705029,
            1705030,
            1705031,
            1705032,
            1705033,
            1705034,
            1705035,
            1705036,
            1705037,
            1705038,
            1705039,
            1705040,
            1705041,
            1705042,
            1705043,
            1705044,
            1705045,
            1705046,
            1705047,
            1705048,
            1705049,
            1705050,
            1705051,
            1705052,
            1705053,
            1705054,
            1705055,
            1705056,
            1705057,
            1705058,
            1705059,
            1705060,
            1705061,
            1705062,
            1705063,
            1705064,
            1705065,
            1705066,
            1705067,
            1705068,
            1705069,
            1705070,
            1705071,
            1705072,
            1705073,
            1705074,
            1705075,
            1705076,
            1705077,
            1705078,
            1705079,
            1705080,
            1705081,
            1705082,
            1705083,
            1705084,
            1705085,
            1705086,
            1705087,
            1705088,
            1705089,
            1705090,
            1705091,
            1705092,
            1705093,
            1705094,
            1705095,
            1705096,
            1705097,
            1705098,
            1705099,
            1705100,
            1705101,
            1705102,
            1705103,
            1705104,
            1705105,
            1705106,
            1705107,
            1705108,
            1705109,
            1705110,
            1705111,
            1705112,
            1705113,
            1705114,
            1705115,
            1705116,
            1705117,
            1705118,
            1705119,
            1705120,
            1705121,
            1705122,
            1705123,
            1705124,
            1705125,
            1705126,
            1705127,
            1705128,
            1705129,
            1705130,
            1705131,
            1705132,
            1705133,
            1705134,
            1705135,
            1705136,
            1705137,
            1705138,
            1705139,
            1705140,
            1705141,
            1705142,
            1705143,
            1705144,
            1705145,
            1705146,
            1705147,
            1705148,
            1705149,
            1705150,
            1705151,
            1705152,
            1705153
      },
      {
            1104000,
            1104001,
            1104002,
            1104003,
            1104004,
            1104005,
            1104006,
            1104007,
            1104008,
            1104009,
            1104010,
            1104011,
            1104012,
            1104013,
            1104014,
            1104015,
            1104016,
            1104017,
            1104018,
            1104019,
            1104020,
            1104021,
            1104022,
            1104023,
            1104024,
            1104025,
            1104026,
            1104027,
            1104028,
            1104029,
            1104030,
            1104031,
            1104032,
            1104033,
            1104034,
            1104035,
            1104036,
            1104037,
            1104038,
            1104039,
            1104040,
            1104041
      },
      new int[0],
      {1075000, 1075001, 1075002, 1075003, 1075004, 1075005, 1075006, 1075007, 1075008, 1075009, 1075010, 1075011, 1075012, 1075013},
      {
            1022500,
            1022501,
            1022502,
            1022503,
            1022504,
            1022505,
            1022506,
            1012900,
            1012901,
            1012902,
            1012903,
            1012904,
            1012905,
            1012906,
            1012907,
            1012908,
            1012909,
            1012910,
            1012911,
            1012912,
            1012913,
            1012914,
            1012915,
            1012916,
            1012917,
            1012918,
            1012919,
            1012920,
            1119019,
            1118017,
            1118016,
            1118015,
            1118014,
            1118013,
            1118012,
            1118011,
            1118010,
            1118004,
            1118003,
            1118002,
            1118001,
            1118000,
            1119018,
            1119017,
            1119016,
            1119015,
            1119014,
            1119013,
            1119012,
            1119011,
            1119010,
            1119004,
            1119003,
            1119002,
            1119001,
            1119000,
            1118019,
            1118018
      },
      {1114401, 1112916}
   };

   public static void main(String[] args) {
      if (!DBConfig.DB_PASSWORD.equals("J2vs@efh6@K6!2")) {
         System.setProperty("net.sf.odinms.wzpath", "wz");
      }

      String WZpath = System.getProperty("net.sf.odinms.wzpath");
      MapleDataProvider prov = MapleDataProviderFactory.getDataProvider(new File(WZpath + "/Etc.wz"));
      MapleData data = prov.getData("Commodity.img");
      List<ModifiedCommodityTool.B> firstAdds = new LinkedList<>();
      List<Long> noSale = new LinkedList<>();
      List<ModifiedCommodityTool.A> discount = new LinkedList<>();
      List<ModifiedCommodityTool.A> adds = new LinkedList<>();
      List<ModifiedCommodityTool.A> pets = new LinkedList<>();
      List<Long> already = new LinkedList<>();
      StringBuilder sb = new StringBuilder();

      for (MapleData dat : data) {
         long sn = MapleDataTool.getLongConvert("SN", dat, 0);
         if (sn > 0L) {
            int itemID = MapleDataTool.getInt("ItemId", dat, 0);
            boolean check = false;
            if (DBConfig.isGanglim) {
               for (int i = 0; i < royalList.length; i++) {
                  for (int j = 0; j < royalList[i].length; j++) {
                     if (royalList[i][j] == itemID) {
                        check = true;
                        break;
                     }
                  }
               }

               for (int i = 0; i < jinList.length; i++) {
                  for (int jx = 0; jx < jinList[i].length; jx++) {
                     if (jinList[i][jx] == itemID) {
                        check = true;
                        break;
                     }
                  }
               }

               for (int id : extremeList) {
                  if (id == itemID) {
                     check = true;
                     break;
                  }
               }
            } else {
               for (int i = 0; i < jinList.length; i++) {
                  for (int jxx = 0; jxx < jinList[i].length; jxx++) {
                     if (jinList[i][jxx] == itemID) {
                        check = true;
                        break;
                     }
                  }
               }

               for (int idx : extremeList) {
                  if (idx == itemID) {
                     check = true;
                     break;
                  }
               }
            }

            if (check
               || DBConfig.isGanglim && itemID == 1112916
               || itemID == 1662136
               || itemID == 1032310
               || itemID == 1005258
               || itemID == 1114402
               || itemID == 1112917
               || itemID == 1112921
               || itemID == 1032219
               || itemID == 1032998
               || itemID == 1190311
               || itemID == 1052634
               || itemID == 1052671
               || itemID == 1109000
               || itemID == 1032999
               || itemID >= 1709000 && itemID <= 1709018
               || itemID >= 1059000 && itemID <= 1059049
               || itemID >= 1079000 && itemID <= 1079005
               || itemID == 1114401
               || itemID / 1000 == 5533
               || itemID >= 1009000 && itemID <= 1009082
               || itemID == 5060048
               || itemID == 5068300
               || itemID == 5680157
               || itemID == 5680159
               || itemID == 5069100
               || itemID == 5069000
               || itemID == 5069001
               || itemID >= 9100000
                  && itemID <= 9109999
                  && (itemID < 9103072 || itemID > 9103074)
                  && itemID != 9103083
                  && itemID != 9102849
                  && itemID != 9102850
                  && (itemID < 9103330 || itemID > 9103333)
                  && (itemID < 9103783 || itemID > 9103786)
                  && itemID != 9104024
                  && itemID != 9104026
                  && itemID != 9102888
                  && itemID != 9102889
               || itemID == 5680196
               || itemID == 5680197
               || itemID == 5250500
               || itemID == 5680184
               || itemID == 5680185
               || itemID == 5450008
               || itemID == 5450006
               || itemID == 5450005
               || itemID == 5450004
               || itemID == 5044002
               || itemID == 5044001
               || itemID == 5044000
               || itemID == 5450007
               || itemID == 5450009
               || itemID == 5041001
               || itemID == 5450000
               || itemID == 5500000
               || itemID == 5500006
               || itemID == 5500005
               || itemID == 5521000
               || itemID == 5500002
               || itemID == 5500001
               || itemID == 5501001
               || itemID == 5501002
               || itemID == 5041000
               || itemID == 5502017
               || itemID == 5502009
               || itemID == 5502007
               || itemID == 5502006
               || itemID == 5041000
               || itemID == 5040000
               || itemID == 5062402
               || itemID == 5062400
               || itemID == 5150165
               || itemID == 5150114
               || itemID == 5150132
               || itemID == 5000484
               || itemID == 5000485
               || itemID == 5000486
               || itemID == 5000490
               || itemID == 9102849
               || itemID == 9102850
               || itemID == 5064000
               || itemID == 5064100
               || itemID == 5064300
               || itemID == 5050100
               || itemID == 5051001
               || itemID == 5064400
               || itemID == 5050000
               || itemID == 5050003
               || itemID == 5050004
               || itemID == 5050002
               || itemID == 5050001
               || itemID == 5502003
               || itemID == 5502002
               || itemID == 5502001
               || itemID == 5502000
               || itemID == 5072000
               || itemID == 5076000
               || itemID == 5390001
               || itemID == 5390002
               || itemID == 5072000
               || itemID == 5076000
               || itemID == 5077000
               || itemID == 5390001
               || itemID == 5390002
               || itemID == 5080001
               || itemID == 5071000
               || itemID == 5090000
               || itemID == 5330000
               || itemID == 5120006
               || itemID == 5121008
               || itemID == 5122000
               || itemID == 5121008
               || itemID == 5120006
               || itemID == 5120001
               || itemID == 5120002
               || itemID == 5121014
               || itemID == 2023177
               || itemID == 5680154
               || itemID == 2023179
               || itemID == 2023176
               || itemID == 2023178
               || itemID == 5152235
               || itemID == 5152091
               || itemID == 5152020
               || itemID == 5151035
               || itemID == 5151036
               || itemID == 5153015
               || itemID == 1142442
               || itemID == 1142443
               || itemID == 5530776
               || itemID == 5680222
               || itemID == 5680531
               || itemID == 5152107
               || itemID == 5152106
               || itemID == 5152105
               || itemID == 5152104
               || itemID == 5152103
               || itemID == 5152102
               || itemID == 5152101
               || itemID == 5152100
               || itemID == 5689000
               || itemID == 5190010
               || itemID == 5190011
               || itemID == 5190004
               || itemID == 5190001
               || itemID == 5190003
               || itemID == 5190006
               || itemID == 5191004
               || itemID == 5190000
               || itemID == 5190002
               || itemID == 5062010) {
               int OnSale = MapleDataTool.getInt("OnSale", dat, 0);
               if (OnSale > 0) {
                  int Price = MapleDataTool.getInt("Price", dat, 0);
                  if (itemID == 5062010) {
                     if (Price < 1000) {
                        noSale.add(sn);
                     }
                  } else {
                     noSale.add(sn);
                  }
               }
            } else if (itemID != 9110000 && itemID != 9110004) {
               if (itemID >= 1000000 && itemID <= 1999999 || itemID >= 5010000 && itemID <= 5019999 || itemID / 1000 == 5021) {
                  int OnSale = MapleDataTool.getInt("OnSale", dat, -1);
                  int Price = MapleDataTool.getInt("Price", dat, 0);
                  if (OnSale == 1 && Price > 0) {
                     boolean find = false;

                     for (ModifiedCommodityTool.A a : adds) {
                        if (a.itemID == itemID) {
                           find = true;
                           break;
                        }
                     }

                     if (!find) {
                        discount.add(new ModifiedCommodityTool.A(itemID, sn));
                     }
                  } else if (OnSale == 0) {
                     boolean find = false;

                     for (ModifiedCommodityTool.A ax : adds) {
                        if (ax.itemID == itemID) {
                           find = true;
                           break;
                        }
                     }

                     if (!find) {
                        adds.add(new ModifiedCommodityTool.A(itemID, sn));
                     }
                  }
               }
            } else {
               int price = MapleDataTool.getInt("Price", dat, 0);
               firstAdds.add(new ModifiedCommodityTool.B(itemID, price, sn));
            }

            if (itemID >= 5000000 && itemID <= 5002999) {
               boolean find = false;

               for (ModifiedCommodityTool.A axx : pets) {
                  if (axx.itemID == itemID) {
                     find = true;
                     break;
                  }
               }

               if (!find) {
                  pets.add(new ModifiedCommodityTool.A(itemID, sn));
               } else {
                  already.add(sn);
               }
            }
         }
      }

      sb.append("SN = ");

      for (ModifiedCommodityTool.B b : firstAdds) {
         sb.append(b.SN).append(",");
      }

      for (Long axxx : noSale) {
         sb.append(axxx).append(",");
      }

      for (ModifiedCommodityTool.A axxx : pets) {
         sb.append(axxx.SN).append(",");
      }

      discount.forEach(axxx -> sb.append(axxx.SN).append(","));
      adds.forEach(axxx -> sb.append(axxx.SN).append(","));

      for (long axxx : already) {
         sb.append(axxx).append(",");
      }

      sb.append("\r\n\r\n");
      sb.append("Price = ");

      for (ModifiedCommodityTool.B b : firstAdds) {
         sb.append(b.price).append(",");
      }

      for (Long axxx : noSale) {
         sb.append(0).append(",");
      }

      for (ModifiedCommodityTool.A axxx : pets) {
         sb.append(0).append(",");
      }

      discount.forEach(axxx -> sb.append(0).append(","));
      adds.forEach(axxx -> sb.append(0).append(","));

      for (long axxx : already) {
         sb.append(0).append(",");
      }

      sb.append("\r\n\r\n");
      sb.append("OnSale = ");

      for (ModifiedCommodityTool.B b : firstAdds) {
         sb.append(1).append(",");
      }

      for (Long axxx : noSale) {
         sb.append(0).append(",");
      }

      for (ModifiedCommodityTool.A axxx : pets) {
         sb.append(1).append(",");
      }

      discount.forEach(axxx -> sb.append(1).append(","));
      adds.forEach(axxx -> sb.append(1).append(","));

      for (long axxx : already) {
         sb.append(0).append(",");
      }

      sb.append("\r\n\r\n");
      FileoutputUtil.log("./ModdifiedCommodity.properties", sb.toString());
   }

   public static class A {
      int itemID;
      long SN;

      public A(int itemID, long SN) {
         this.itemID = itemID;
         this.SN = SN;
      }
   }

   public static class B {
      int itemID;
      int price;
      long SN;

      public B(int itemID, int price, long SN) {
         this.price = price;
         this.itemID = itemID;
         this.SN = SN;
      }
   }
}
